// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Test = require("../config/testConfig.js");

contract("verifier", (accounts) => {
    var config;
    var json;

    before("setup contract", async () => {
        config = await Test.Config(accounts);
        json = require("../../zokrates/code/square/proof.json");
    });

    describe("Proof validation", function () {
        // Test verification with correct proof
        // - use the contents from proof.json generated from zokrates steps
        it("Should verify using the correct proof", async function () {
            const result = await config.verifier.verifyTx(json.proof.a, json.proof.b, json.proof.c, json.inputs);
            assert.equal(result, true, "The expected result does not match.");
        });

        // Test verification with incorrect proof
        it("Should not verify using an incorrect proof", async function () {
            const result = await config.verifier.verifyTx(json.proof.c, json.proof.b, json.proof.a, json.inputs);
            assert.equal(result, false, "The expected result does not match.");
        });
    });
});
